---
# Install Kubernetes Packages
- name: Install apt-transport-https and other necessary packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - gnupg2

# Add Kubernetes apt repository
- name: Add Kubernetes apt repository GPG key
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add Kubernetes apt repository
  ansible.builtin.apt_repository:
    repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: kubernetes

- name: Update apt cache after adding Kubernetes repository
  apt:
    update_cache: yes

# Install Kubernetes components
- name: Install kubeadm, kubelet, and kubectl
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - kubeadm
    - kubelet
    - kubectl

# Mark kubelet, kubeadm, and kubectl to hold versions
- name: Marking kubelet, kubeadm, and kubectl to hold versions
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    hold: yes
  loop:
    - kubelet
    - kubeadm
    - kubectl

# Initialize Kubernetes Cluster (Only on Master Node)
# Important: Run this task manually only on the master node
- name: Initialize Kubernetes cluster with kubeadm
  command: kubeadm init
  when: inventory_hostname in groups['kube-master']
  ignore_errors: yes

# Copy Kube config to home directory for kubectl (Only on Master Node)
- name: Create .kube directory
  file:
    path: "$HOME/.kube"
    state: directory
    mode: 0755
  when: inventory_hostname in groups['kube-master']

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "$HOME/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0644
  when: inventory_hostname in groups['kube-master']

# Setup Pod Network (Only on Master Node)
# Example: Using Calico. You can replace it with your preferred CNI
- name: Install Calico network plugin
  shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  when: inventory_hostname in groups['kube-master']

# Join Worker Nodes to Cluster
# Important: Run this task manually on each worker node using the token generated by kubeadm init
- name: Join node to Kubernetes cluster
  command: "{{ hostvars['kube-master'].join_command }}"
  when: inventory_hostname in groups['kube-workers']
  ignore_errors: yes
